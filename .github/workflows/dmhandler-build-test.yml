name: DMHandler CI

on:
  push:
    paths-ignore:
      - 'infrastructure/**'
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake g++ ninja-build lcov clang-tidy cppcheck

      # Static analysis
      - name: Configure CMake with compile_commands.json
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run clang-tidy
        run: clang-tidy -p build $(find ./src ./include ./tests -name '*.cpp')

      - name: Run cppcheck
        run: |
          cppcheck --enable=all --inconclusive --suppress=missingIncludeSystem \
                   --std=c++17 --error-exitcode=1 --quiet ./src ./include ./tests

      # Code coverage
      - name: Configure CMake with code coverage
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON

      - name: Build project with tests
        run: cmake --build build

      - name: Run tests with ctest
        run: cd build && ctest --output-on-failure

      - name: Generate coverage report
        run: |
          lcov --directory build --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info
          genhtml coverage.info --output-directory coverage_report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_report

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/Testing/Temporary/LastTest.log

      - name: Upload DMHandler binary to S3
        if: success()
        run: |
          aws s3 cp build/DMHandler s3://dmhandler-build-artifacts/releases/DMHandler-v0.1.0-${{ github.sha }} \
            --metadata version=0.1.0,build=local
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Upload DMHandler to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DMHandler
          path: build/DMHandler
